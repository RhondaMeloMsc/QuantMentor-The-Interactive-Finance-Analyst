THE PURPOSE OF the tar sheet.csv

🎯 Purpose of tearsheet.csv
The tearsheet.csv file is the summary output generated by your enhanced backtest_scaffold_plus.py script. Its purpose is to store key performance and risk metrics from a backtest run in a compact, machine-readable format — essentially a “mini performance report” (a tearsheet) that can be archived, shared, or compared across strategies.

🧩 Why it exists in your project
It exists so that after running a strategy backtest, you don’t just see results printed in the terminal — you also get a permanent record of the run’s key statistics.
That way, you can:
	•	Compare multiple strategy versions (A/B tests).
	•	Keep reproducible logs of performance.
	•	Import results into Excel, Python notebooks, or dashboards.
	•	Use it as part of a continuous evaluation pipeline (CI/CD for quant code).
In short: it bridges computation → documentation.


📊 What’s inside
Each row of tearsheet.csv contains a single backtest summary with these fields:

Column
Meaning
n
Number of trading days (observations).
mean_daily_excess
Average daily excess return (strategy − risk-free).
std_daily_excess
Daily standard deviation of excess returns.
downside_std_daily
Downside deviation (volatility of negative returns).
vol_annualized
Annualized volatility (σ × √252).
sharpe_annualized
Annualized Sharpe ratio (μ/σ × √252).
sortino_annualized
Annualized Sortino ratio (μ/downside σ × √252).
max_drawdown
Largest peak-to-trough loss (in %).
hit_rate
% of positive-return days.
cumulative_return
Total return across the test period.


⚙️ How it’s created
When you run:

python scripts/backtest_scaffold_plus.py ohlc_with_rf.csv \
    --fee-bps 1.5 \
    --riskfree-col riskfree \
    --window 60 \
    --tearsheet tearsheet.csv


the script:
	1	Runs the backtest logic.
	2	Computes all the above metrics.
	3	Saves them in a single-row CSV at the path you specify.
	4	Prints confirmation:    Tearsheet saved to: tearsheet.csv
  
This way, each run produces a clean, versionable report file.

🧠 Finance meaning
A tearsheet is what real quant teams or funds use to summarize performance:
	•	It captures return, volatility, and risk-adjusted ratios in one place.
	•	It’s used in strategy review meetings to decide whether a model deserves further development or capital allocation.
	•	It’s also what investors see — a clear, factual snapshot of performance characteristics.
Your version is an educational micro-tearsheet — a simplified version of what institutions like Jane Street, AQR, or Two Sigma would maintain internally for each model or factor.

🧾 How it fits in your project
File
Purpose
sample_returns.csv
Demo input for Sharpe testing.
ohlc_synth.csv
Synthetic OHLC data for backtesting.
ohlc_with_rf.csv
Adds risk-free rate for excess return testing.
rolling_sharpe.png
Visual output of rolling Sharpe analysis.
tearsheet.csv
Numeric summary output of all key risk/performance metrics.
Together, these form a complete quant toolkit pipeline: data → strategy → analytics → visualization → summary report.

✅ In one sentence:
tearsheet.csv is the automated performance summary generated by your backtest — a compact, exportable report containing all the essential risk and return metrics (Sharpe, Sortino, drawdown, volatility, hit rate, and cumulative return) so you can track, compare, and document strategy performance over time.









